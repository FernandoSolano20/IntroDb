-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-08-15 19:16:32 CST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE artistas (
    id               INTEGER NOT NULL,
    nombre           VARCHAR2(250) NOT NULL,
    apellido         VARCHAR2(250) NOT NULL,
    nombreartistico  VARCHAR2(250) NOT NULL,
    fechanacimeinto  DATE NOT NULL,
    fechainicio      DATE NOT NULL,
    idpais           CHAR(2) NOT NULL,
    idgenero         VARCHAR2(20) NOT NULL
);

ALTER TABLE artistas ADD CONSTRAINT artistas_pk PRIMARY KEY ( id );

CREATE TABLE artistatipoartista (
    idartista      INTEGER NOT NULL,
    idtipoartista  VARCHAR2(250) NOT NULL
);

ALTER TABLE artistatipoartista ADD CONSTRAINT artistatipoartista_pk PRIMARY KEY ( idartista,
                                                                                  idtipoartista );

CREATE TABLE artistatransmicion (
    idartista             INTEGER NOT NULL,
    idtansmicionesenvivo  INTEGER NOT NULL
);

ALTER TABLE artistatransmicion ADD CONSTRAINT artistatransmicion_pk PRIMARY KEY ( idartista,
                                                                                  idtansmicionesenvivo );

CREATE TABLE audiolibro (
    id               INTEGER NOT NULL,
    titulo           VARCHAR2(250) NOT NULL,
    autor            VARCHAR2(250) NOT NULL,
    hora             VARCHAR2(2) NOT NULL,
    minutos          VARCHAR2(2),
    segundos         VARCHAR2(2) NOT NULL,
    fecha            DATE NOT NULL,
    numerocapitulos  VARCHAR2(3) NOT NULL,
    editorial        VARCHAR2(250) NOT NULL,
    audio            VARCHAR2(100)
);

ALTER TABLE audiolibro ADD CONSTRAINT audiolibro_pk PRIMARY KEY ( id );

CREATE TABLE clasificaciones (
    tipoclasificacion VARCHAR2(250) NOT NULL
);

ALTER TABLE clasificaciones ADD CONSTRAINT clasificaciones_pk PRIMARY KEY ( tipoclasificacion );

CREATE TABLE cliente_formadepago (
    idcliente  INTEGER NOT NULL,
    tipopago   VARCHAR2(250) NOT NULL
);

ALTER TABLE cliente_formadepago ADD CONSTRAINT cliente_formadepago_pk PRIMARY KEY ( idcliente,
                                                                                    tipopago );

CREATE TABLE clientes (
    id               INTEGER NOT NULL,
    nombre           VARCHAR2(250) NOT NULL,
    apellido         VARCHAR2(250) NOT NULL,
    direccion        VARCHAR2(250) NOT NULL,
    telefono         VARCHAR2(20) NOT NULL,
    fechanacimiento  DATE NOT NULL,
    email            VARCHAR2(100) NOT NULL,
    claveacceso      VARCHAR2(10) NOT NULL,
    profesion        VARCHAR2(250) NOT NULL,
    fechamembresia   DATE NOT NULL,
    idpais           CHAR(2) NOT NULL,
    idgenero         VARCHAR2(20) NOT NULL
);

ALTER TABLE clientes ADD CONSTRAINT clientes_pk PRIMARY KEY ( id );

CREATE TABLE descargas (
    id                    INTEGER NOT NULL,
    fechainicio           DATE NOT NULL,
    idformatomusical      NUMBER,
    idformatodocumental   NUMBER,
    idformatotransmicion  NUMBER,
    idformatoserie        NUMBER,
    idformatoaudiolibro   NUMBER,
    idformatopelicula     NUMBER
);

ALTER TABLE descargas ADD CONSTRAINT descargas_pk PRIMARY KEY ( id );

CREATE TABLE documentales (
    id        INTEGER NOT NULL,
    titulo    VARCHAR2(250) NOT NULL,
    anno      DATE NOT NULL,
    idgenero  VARCHAR2(250) NOT NULL
);

ALTER TABLE documentales ADD CONSTRAINT documentales_pk PRIMARY KEY ( id );

CREATE TABLE episodios (
    id           INTEGER NOT NULL,
    fecha        DATE NOT NULL,
    numero       VARCHAR2(10) NOT NULL,
    titulo       VARCHAR2(250) NOT NULL,
    hora         VARCHAR2(2) NOT NULL,
    minutos      VARCHAR2(2) NOT NULL,
    segundos     VARCHAR2(2) NOT NULL,
    idtemporada  INTEGER NOT NULL
);

ALTER TABLE episodios ADD CONSTRAINT episodios_pk PRIMARY KEY ( id );

CREATE TABLE formasdepago (
    tipopago VARCHAR2(250) NOT NULL
);

ALTER TABLE formasdepago ADD CONSTRAINT formasdepago_pk PRIMARY KEY ( tipopago );

CREATE TABLE formatoaudiolibro (
    id            NUMBER NOT NULL,
    formato       VARCHAR2(10) NOT NULL,
    idaudiolibro  INTEGER NOT NULL
);

ALTER TABLE formatoaudiolibro ADD CONSTRAINT formatoaudiolibro_pk PRIMARY KEY ( id );

ALTER TABLE formatoaudiolibro ADD CONSTRAINT audiolibroformatos_formato UNIQUE ( idaudiolibro,
                                                                                 formato );

CREATE TABLE formatodocumentales (
    id            NUMBER NOT NULL,
    idformato     VARCHAR2(10) NOT NULL,
    iddocumental  INTEGER NOT NULL
);

ALTER TABLE formatodocumentales ADD CONSTRAINT formatodocumentales_pk PRIMARY KEY ( id );

ALTER TABLE formatodocumentales ADD CONSTRAINT formatosdocumental UNIQUE ( idformato,
                                                                           iddocumental );

CREATE TABLE formatopelicula (
    id          NUMBER NOT NULL,
    idpelicula  INTEGER NOT NULL,
    idformato   VARCHAR2(10) NOT NULL
);

ALTER TABLE formatopelicula ADD CONSTRAINT formatopelicula_pk PRIMARY KEY ( id );

ALTER TABLE formatopelicula ADD CONSTRAINT formatos_peliculas UNIQUE ( idformato,
                                                                       idpelicula );

CREATE TABLE formatos (
    formato VARCHAR2(10) NOT NULL
);

ALTER TABLE formatos ADD CONSTRAINT formatos_pk PRIMARY KEY ( formato );

CREATE TABLE formatoserie (
    id         NUMBER NOT NULL,
    idserie    INTEGER NOT NULL,
    idformato  VARCHAR2(10) NOT NULL
);

ALTER TABLE formatoserie ADD CONSTRAINT formatoserie_pk PRIMARY KEY ( id );

ALTER TABLE formatoserie ADD CONSTRAINT formato_series UNIQUE ( idformato,
                                                                idserie );

CREATE TABLE formatotransmicion (
    id                    NUMBER NOT NULL,
    idtansmicionesenvivo  INTEGER NOT NULL,
    formato               VARCHAR2(10) NOT NULL
);

ALTER TABLE formatotransmicion ADD CONSTRAINT formatotransmicion_pk PRIMARY KEY ( id );

ALTER TABLE formatotransmicion ADD CONSTRAINT idtransmicionformato UNIQUE ( formato,
                                                                            idtansmicionesenvivo );

CREATE TABLE formatovideomusical (
    id               NUMBER NOT NULL,
    idvideosmusical  INTEGER NOT NULL,
    formato          VARCHAR2(10) NOT NULL
);

ALTER TABLE formatovideomusical ADD CONSTRAINT formatovideomusical_pk PRIMARY KEY ( id );

ALTER TABLE formatovideomusical ADD CONSTRAINT idformatvideomusical UNIQUE ( formato,
                                                                             idvideosmusical );

CREATE TABLE generos (
    tipo VARCHAR2(250) NOT NULL
);

ALTER TABLE generos ADD CONSTRAINT generos_pk PRIMARY KEY ( tipo );

CREATE TABLE paises (
    id      CHAR(2) NOT NULL,
    nombre  VARCHAR2(40) NOT NULL
);

ALTER TABLE paises ADD CONSTRAINT paises_pk PRIMARY KEY ( id );

CREATE TABLE peliculagenero (
    idgenero    VARCHAR2(250) NOT NULL,
    idpelicula  INTEGER NOT NULL
);

ALTER TABLE peliculagenero ADD CONSTRAINT peliculagenero_pk PRIMARY KEY ( idpelicula,
                                                                          idgenero );

CREATE TABLE peliculas (
    id                   INTEGER NOT NULL,
    titulo               VARCHAR2(250) NOT NULL,
    anno                 DATE NOT NULL,
    estudio              VARCHAR2(300) NOT NULL,
    hora                 VARCHAR2(1) NOT NULL,
    minuto               VARCHAR2(2) NOT NULL,
    segundo              VARCHAR2(2) NOT NULL,
    idpais               CHAR(2) NOT NULL,
    idartista            INTEGER NOT NULL,
    idtipoclasificacion  VARCHAR2(250) NOT NULL,
    idsaga               INTEGER
);

ALTER TABLE peliculas ADD CONSTRAINT peliculas_pk PRIMARY KEY ( id );

CREATE TABLE repartoserie (
    idserie    INTEGER NOT NULL,
    idartista  INTEGER NOT NULL
);

ALTER TABLE repartoserie ADD CONSTRAINT repartoserie_pk PRIMARY KEY ( idserie,
                                                                      idartista );

CREATE TABLE repartospelicula (
    idartista   INTEGER NOT NULL,
    idpelicula  INTEGER NOT NULL
);

ALTER TABLE repartospelicula ADD CONSTRAINT repartospelicula_pk PRIMARY KEY ( idpelicula,
                                                                              idartista );

CREATE TABLE reproducciones (
    id                    INTEGER NOT NULL,
    fechainicio           DATE NOT NULL,
    estadoactual          CHAR(1) NOT NULL,
    ultimosegundo         VARCHAR2(2) NOT NULL,
    idcliente             INTEGER NOT NULL,
    idaudiolibro          INTEGER,
    idtansmicionesenvivo  INTEGER,
    idvideosmusical       INTEGER,
    iddocumental          INTEGER,
    idserie               INTEGER,
    idpelicula            INTEGER
);

ALTER TABLE reproducciones ADD CONSTRAINT reproducciones_pk PRIMARY KEY ( id );

CREATE TABLE sagas (
    id            INTEGER NOT NULL,
    sagapelicula  VARCHAR2(250) NOT NULL
);

ALTER TABLE sagas ADD CONSTRAINT sagas_pk PRIMARY KEY ( id );

CREATE TABLE series (
    id                   INTEGER NOT NULL,
    anno                 DATE NOT NULL,
    estudio              VARCHAR2(250),
    idpais               CHAR(2) NOT NULL,
    idgenero             VARCHAR2(250) NOT NULL,
    idartista            INTEGER NOT NULL,
    idtipoclasificacion  VARCHAR2(250) NOT NULL
);

ALTER TABLE series ADD CONSTRAINT series_pk PRIMARY KEY ( id );

CREATE TABLE sexos (
    genero VARCHAR2(20) NOT NULL
);

ALTER TABLE sexos ADD CONSTRAINT sexos_pk PRIMARY KEY ( genero );

CREATE TABLE tansmicionesenvivo (
    id        INTEGER NOT NULL,
    titulo    VARCHAR2(250) NOT NULL,
    fecha     DATE NOT NULL,
    hora      VARCHAR2(2) NOT NULL,
    minutos   VARCHAR2(2) NOT NULL,
    segundos  VARCHAR2(2) NOT NULL
);

ALTER TABLE tansmicionesenvivo ADD CONSTRAINT tansmicionesenvivo_pk PRIMARY KEY ( id );

CREATE TABLE temporadas (
    id               INTEGER NOT NULL,
    numerotemporada  VARCHAR2(10) NOT NULL,
    idserie          INTEGER NOT NULL
);

ALTER TABLE temporadas ADD CONSTRAINT temporadas_pk PRIMARY KEY ( id );

CREATE TABLE tipomusical (
    tipomusica VARCHAR2(250) NOT NULL
);

ALTER TABLE tipomusical ADD CONSTRAINT tipomusical_pk PRIMARY KEY ( tipomusica );

CREATE TABLE tiposartistas (
    tipo VARCHAR2(250) NOT NULL
);

ALTER TABLE tiposartistas ADD CONSTRAINT tiposartistas_pk PRIMARY KEY ( tipo );

CREATE TABLE videosmusicales (
    id            INTEGER NOT NULL,
    hora          VARCHAR2(1) NOT NULL,
    minutos       VARCHAR2(2) NOT NULL,
    segundos      VARCHAR2(2) NOT NULL,
    lirica        VARCHAR2(10000),
    musica        VARCHAR2(250),
    idtipomusica  VARCHAR2(250) NOT NULL
);

ALTER TABLE videosmusicales ADD CONSTRAINT videosmusicales_pk PRIMARY KEY ( id );

ALTER TABLE reproducciones
    ADD CONSTRAINT a FOREIGN KEY ( idaudiolibro )
        REFERENCES audiolibro ( id );

ALTER TABLE repartoserie
    ADD CONSTRAINT aa FOREIGN KEY ( idserie )
        REFERENCES series ( id );

ALTER TABLE formatotransmicion
    ADD CONSTRAINT aaa FOREIGN KEY ( formato )
        REFERENCES formatos ( formato );

ALTER TABLE formatoaudiolibro
    ADD CONSTRAINT b FOREIGN KEY ( idaudiolibro )
        REFERENCES audiolibro ( id );

ALTER TABLE formatoserie
    ADD CONSTRAINT bb FOREIGN KEY ( idserie )
        REFERENCES series ( id );

ALTER TABLE formatovideomusical
    ADD CONSTRAINT bbb FOREIGN KEY ( formato )
        REFERENCES formatos ( formato );

ALTER TABLE reproducciones
    ADD CONSTRAINT c FOREIGN KEY ( idserie )
        REFERENCES series ( id );

ALTER TABLE descargas
    ADD CONSTRAINT cc FOREIGN KEY ( idformatoaudiolibro )
        REFERENCES formatoaudiolibro ( id );

ALTER TABLE descargas
    ADD CONSTRAINT ccc FOREIGN KEY ( idformatomusical )
        REFERENCES formatovideomusical ( id );

ALTER TABLE reproducciones
    ADD CONSTRAINT d FOREIGN KEY ( iddocumental )
        REFERENCES documentales ( id );

ALTER TABLE artistas
    ADD CONSTRAINT dd FOREIGN KEY ( idgenero )
        REFERENCES sexos ( genero );

ALTER TABLE reproducciones
    ADD CONSTRAINT e FOREIGN KEY ( idpelicula )
        REFERENCES peliculas ( id );

ALTER TABLE formatoaudiolibro
    ADD CONSTRAINT ee FOREIGN KEY ( formato )
        REFERENCES formatos ( formato );

ALTER TABLE reproducciones
    ADD CONSTRAINT f FOREIGN KEY ( idcliente )
        REFERENCES clientes ( id );

ALTER TABLE artistas
    ADD CONSTRAINT ff FOREIGN KEY ( idpais )
        REFERENCES paises ( id );

ALTER TABLE reproducciones
    ADD CONSTRAINT g FOREIGN KEY ( idtansmicionesenvivo )
        REFERENCES tansmicionesenvivo ( id );

ALTER TABLE peliculas
    ADD CONSTRAINT gg FOREIGN KEY ( idsaga )
        REFERENCES sagas ( id );

ALTER TABLE reproducciones
    ADD CONSTRAINT h FOREIGN KEY ( idvideosmusical )
        REFERENCES videosmusicales ( id );

ALTER TABLE repartospelicula
    ADD CONSTRAINT hh FOREIGN KEY ( idpelicula )
        REFERENCES peliculas ( id );

ALTER TABLE cliente_formadepago
    ADD CONSTRAINT i FOREIGN KEY ( tipopago )
        REFERENCES formasdepago ( tipopago );

ALTER TABLE formatopelicula
    ADD CONSTRAINT ii FOREIGN KEY ( idpelicula )
        REFERENCES peliculas ( id );

ALTER TABLE episodios
    ADD CONSTRAINT j FOREIGN KEY ( idtemporada )
        REFERENCES temporadas ( id );

ALTER TABLE peliculas
    ADD CONSTRAINT jj FOREIGN KEY ( idartista )
        REFERENCES artistas ( id );

ALTER TABLE documentales
    ADD CONSTRAINT k FOREIGN KEY ( idgenero )
        REFERENCES generos ( tipo );

ALTER TABLE repartoserie
    ADD CONSTRAINT kk FOREIGN KEY ( idartista )
        REFERENCES artistas ( id );

ALTER TABLE formatodocumentales
    ADD CONSTRAINT l FOREIGN KEY ( iddocumental )
        REFERENCES documentales ( id );

ALTER TABLE artistatipoartista
    ADD CONSTRAINT ll FOREIGN KEY ( idartista )
        REFERENCES artistas ( id );

ALTER TABLE cliente_formadepago
    ADD CONSTRAINT m FOREIGN KEY ( idcliente )
        REFERENCES clientes ( id );

ALTER TABLE artistatransmicion
    ADD CONSTRAINT mm FOREIGN KEY ( idartista )
        REFERENCES artistas ( id );

ALTER TABLE clientes
    ADD CONSTRAINT n FOREIGN KEY ( idgenero )
        REFERENCES sexos ( genero );

ALTER TABLE repartospelicula
    ADD CONSTRAINT nn FOREIGN KEY ( idartista )
        REFERENCES artistas ( id );

ALTER TABLE clientes
    ADD CONSTRAINT o FOREIGN KEY ( idpais )
        REFERENCES paises ( id );

ALTER TABLE formatoserie
    ADD CONSTRAINT oo FOREIGN KEY ( idformato )
        REFERENCES formatos ( formato );

ALTER TABLE temporadas
    ADD CONSTRAINT p FOREIGN KEY ( idserie )
        REFERENCES series ( id );

ALTER TABLE artistatipoartista
    ADD CONSTRAINT pp FOREIGN KEY ( idtipoartista )
        REFERENCES tiposartistas ( tipo );

ALTER TABLE series
    ADD CONSTRAINT q FOREIGN KEY ( idgenero )
        REFERENCES generos ( tipo );

ALTER TABLE artistatransmicion
    ADD CONSTRAINT qq FOREIGN KEY ( idtansmicionesenvivo )
        REFERENCES tansmicionesenvivo ( id );

ALTER TABLE peliculagenero
    ADD CONSTRAINT r FOREIGN KEY ( idgenero )
        REFERENCES generos ( tipo );

ALTER TABLE formatodocumentales
    ADD CONSTRAINT s FOREIGN KEY ( idformato )
        REFERENCES formatos ( formato );

ALTER TABLE peliculagenero
    ADD CONSTRAINT t FOREIGN KEY ( idpelicula )
        REFERENCES peliculas ( id );

ALTER TABLE descargas
    ADD CONSTRAINT tt FOREIGN KEY ( idformatopelicula )
        REFERENCES formatopelicula ( id );

ALTER TABLE peliculas
    ADD CONSTRAINT u FOREIGN KEY ( idtipoclasificacion )
        REFERENCES clasificaciones ( tipoclasificacion );

ALTER TABLE videosmusicales
    ADD CONSTRAINT uu FOREIGN KEY ( idtipomusica )
        REFERENCES tipomusical ( tipomusica );

ALTER TABLE descargas
    ADD CONSTRAINT v FOREIGN KEY ( idformatodocumental )
        REFERENCES formatodocumentales ( id );

ALTER TABLE formatovideomusical
    ADD CONSTRAINT vv FOREIGN KEY ( idvideosmusical )
        REFERENCES videosmusicales ( id );

ALTER TABLE series
    ADD CONSTRAINT w FOREIGN KEY ( idtipoclasificacion )
        REFERENCES clasificaciones ( tipoclasificacion );

ALTER TABLE descargas
    ADD CONSTRAINT ww FOREIGN KEY ( idformatoserie )
        REFERENCES formatoserie ( id );

ALTER TABLE series
    ADD CONSTRAINT x FOREIGN KEY ( idpais )
        REFERENCES paises ( id );

ALTER TABLE formatotransmicion
    ADD CONSTRAINT xx FOREIGN KEY ( idtansmicionesenvivo )
        REFERENCES tansmicionesenvivo ( id );

ALTER TABLE series
    ADD CONSTRAINT y FOREIGN KEY ( idartista )
        REFERENCES artistas ( id );

ALTER TABLE descargas
    ADD CONSTRAINT yy FOREIGN KEY ( idformatotransmicion )
        REFERENCES formatotransmicion ( id );

ALTER TABLE peliculas
    ADD CONSTRAINT z FOREIGN KEY ( idpais )
        REFERENCES paises ( id );

ALTER TABLE formatopelicula
    ADD CONSTRAINT zz FOREIGN KEY ( idformato )
        REFERENCES formatos ( formato );

CREATE SEQUENCE formatoaudiolibro_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER formatoaudiolibro_id_trg BEFORE
    INSERT ON formatoaudiolibro
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := formatoaudiolibro_id_seq.nextval;
END;
/

CREATE SEQUENCE formatodocumentales_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER formatodocumentales_id_trg BEFORE
    INSERT ON formatodocumentales
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := formatodocumentales_id_seq.nextval;
END;
/

CREATE SEQUENCE formatopelicula_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER formatopelicula_id_trg BEFORE
    INSERT ON formatopelicula
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := formatopelicula_id_seq.nextval;
END;
/

CREATE SEQUENCE formatoserie_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER formatoserie_id_trg BEFORE
    INSERT ON formatoserie
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := formatoserie_id_seq.nextval;
END;
/

CREATE SEQUENCE formatotransmicion_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER formatotransmicion_id_trg BEFORE
    INSERT ON formatotransmicion
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := formatotransmicion_id_seq.nextval;
END;
/

CREATE SEQUENCE formatovideomusical_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER formatovideomusical_id_trg BEFORE
    INSERT ON formatovideomusical
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := formatovideomusical_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            33
-- CREATE INDEX                             0
-- ALTER TABLE                             92
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
